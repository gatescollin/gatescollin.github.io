---
title: "NFL in 2022"
author: "Collin Gates"
date: "2023-12-13"
categories: [NFL, code, analysis]
image: "NFL.PNG"
toc: true

execute: 
  warning: false
  message: false
  
---
```{r}
#| include: false

library(knitr)
library(rmarkdown)
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(ggplot2)
library(dplyr)
theme_set(theme_ipsum()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x  = element_text(angle = 0,
                                            size = rel(1.5),
                                            margin = margin(10,0,0,0)),
                axis.title.y  = element_text(angle = 0,
                                            size = rel(1.5),
                                            margin = margin(0,10,0,0))
                )
          )
```

Let's analyze the `NFL2022_stuffs` data:

```{r}
NFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')
```

Variable description
- play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play

- game_id: Ten digit identifier for NFL game.

- drive: Numeric drive number in the game.

- week: Season week.

- posteam: String abbreviation for the team with possession.

- qtr: Quarter of the game (5 is overtime).

- half_seconds_remaining: Numeric seconds remaining in the half.

- down: The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.

- pass: Binary indicator if the play was a pass play.

- wp: Estimated winning probability for the posteam given the current situation at the start of the given play.

#Q2a.
In data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.

```{r}
NFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')
NFL2022_stuffs_clean <- NFL2022_stuffs %>%
  filter(!is.na(posteam))
head(NFL2022_stuffs_clean)
```
##Q2b.
Summarize the mean value of pass for each posteam when all the following conditions hold:
1. wp is greater than 20% and less than 75%;
2. down is less than or equal to 2; and
3. half_seconds_remaining is greater than 120.

```{r}
Q2b_answer <- NFL2022_stuffs %>%
  filter(wp > 0.20, wp < 0.75, down <= 2, half_seconds_remaining > 120) %>%
  group_by(posteam) %>%
  summarize(mean_pass = mean(pass, na.rm = TRUE)) %>%
  arrange(desc(mean_pass))

kable(Q2b_answer)
```
###Q2c
Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.
In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.
```{r}
ggplot(Q2b_answer, aes(x = reorder(posteam, mean_pass), y = mean_pass)) +
  geom_point() +
  labs(x = "Posteam", y = "Mean Pass Value", title = "Mean Pass Value for Each Posteam") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
The scatter plot shows varying mean pass values across NFL teams, with the ordering highlighting teams that pass more frequently under specific conditions.

####Q2d
Consider the following data.frame, NFL2022_epa:
```{r}
NFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')
```
Variable description for NFL2022_epa

- play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play

- game_id: Ten digit identifier for NFL game.

- drive: Numeric drive number in the game.

- posteam: String abbreviation for the team with possession.

- passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)

- receiver: Name of the receiver.

- epa: Expected points added (EPA) by the posteam for the given play.
---
Create the data.frame, NFL2022_stuffs_EPA, that includes

All the variables in the data.frame, NFL2022_stuffs;
The variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.
In the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.

```{r}
NFL2022_stuffs_EPA <- NFL2022_stuffs %>%
  left_join(NFL2022_epa, by = c("play_id", "game_id")) %>%
  filter(!is.na(passer))

head(NFL2022_stuffs_EPA)
```
#####Q2e
Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,
1. "J.Allen"
2. "P.Mahomes"
## Q2e. NFL Weekly Trend Analysis

Below is the trend of the weekly mean value of Expected Points Added (EPA) for passers J.Allen and P.Mahomes.

```{r epa-trend, fig.cap="Weekly mean EPA values for J.Allen and P.Mahomes"}
ggplot(data = your_data_frame, aes(x = week, y = epa, color = passer)) +
  geom_point() +
  geom_line() +
  labs(title = "Weekly Trend of EPA for J.Allen and P.Mahomes",
       x = "Week",
       y = "Mean EPA")
```
The graph illustrates the fluctuation in performance over the weeks, with both J.Allen and P.Mahomes showing peaks and troughs at various stages of the season, reflecting the dynamic nature of the game and individual performance.

######Q2f
Calculate the difference between the mean value of epa for "J.Allen" the mean value of epa for "P.Mahomes" for each value of week.

```{r calculate-differences}
weekly_epa <- NFL2022_stuffs_EPA %>%
  filter(passer %in% c("J.Allen", "P.Mahomes")) %>%
  group_by(week, passer) %>%
  summarize(mean_epa = mean(epa, na.rm = TRUE)) %>%
  pivot_wider(names_from = passer, values_from = mean_epa)

weekly_epa <- weekly_epa %>%
  mutate(epa_difference = `J.Allen` - `P.Mahomes`)

weekly_epa
```

######Q2g
- Summarize the resulting data.frame in Q2d, with the following four variables:

- posteam: String abbreviation for the team with possession.

- passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)

- mean_epa: Mean value of epa in 2022 for each passer

- n_pass: Number of observations for each passer
-
Then find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.

## Q2g. Top 10 NFL Passers by Mean EPA in 2022

We summarize the `NFL2022_stuffs_EPA` DataFrame to find the top 10 NFL passers by the mean value of EPA, with the condition that the number of passes (`n_pass`) must be at least the third quantile of `n_pass`.

```{r top-passers}
passer_summary <- NFL2022_stuffs_EPA %>%
  group_by(passer, posteam) %>%
  summarize(
    mean_epa = mean(epa, na.rm = TRUE),
    n_pass = n()
  ) %>%
  ungroup()

third_quantile_n_pass <- quantile(passer_summary$n_pass, 0.75)

top_passers <- passer_summary %>%
  filter(n_pass >= third_quantile_n_pass) %>%
  arrange(desc(mean_epa)) %>%
  slice_head(n = 10)

top_passers

